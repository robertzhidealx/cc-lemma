(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data List (Nil Cons))
  (:: Nil (-> (Unit) List))
  (:: Cons (-> (Nat List) List))
  (data CList (Cnil Single Concat))
  (:: Cnil (-> (Unit) CList))
  (:: Single (-> (Nat) CList))
  (:: Concat (-> (CList CList) CList))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite2 (-> (Bool Nat Nat) Nat))
  (let ite2 (True ?x ?y) ?x)
  (let ite2 (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv0 ?tv1) (ite2 (lq ?tv0 ?tv1) ?tv1 ?tv0))
  (data Tuple3 (MakeTuple3))
  (:: MakeTuple3 (-> (Nat Nat) Tuple3))
  (:: fst3 (-> (Tuple3) Nat))
  (let fst3 ((MakeTuple3 ?x0 ?x1)) ?x0)
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: snd3 (-> (Tuple3) Nat))
  (let snd3 ((MakeTuple3 ?x0 ?x1)) ?x1)
  (:: spec (-> (List) Tuple3))
  (let spec ((Nil ?tv5)) (MakeTuple3 Zero Zero))
  (let spec ((Cons ?tv6 ?tv7)) (MakeTuple3 (max (fst3 (spec ?tv7)) (plus ?tv6 (snd3 (spec ?tv7)))) (plus ?tv6 (snd3 (spec ?tv7)))))
  (:: cat (-> (List List) List))
  (let cat (?tv13 (Nil ?tv14)) ?tv13)
  (let cat (?tv13 (Cons ?tv15 ?tv16)) (Cons ?tv15 (cat ?tv13 ?tv16)))
  (:: repr (-> (CList) List))
  (let repr ((Cnil ?tv20)) (Nil Null))
  (let repr ((Single ?tv21)) (Cons ?tv21 (Nil Null)))
  (let repr ((Concat ?tv22 ?tv23)) (cat (repr ?tv23) (repr ?tv22)))
  (:: main (-> (CList) Nat))
  (let main (?tv24) (fst3 (spec (repr ?tv24))))
  (:: mainNew (-> (CList) Tuple3))
  (let mainNew ((Cnil ?tv28)) (MakeTuple3 Zero Zero))
  (let mainNew ((Single ?tv29)) (MakeTuple3 (ite2 (lq ?tv29 Zero) Zero ?tv29) ?tv29))
  (let mainNew ((Concat ?tv30 ?tv31)) (MakeTuple3 (max (fst3 (mainNew ?tv31)) (plus (snd3 (mainNew ?tv31)) (fst3 (mainNew ?tv30)))) (plus (snd3 (mainNew ?tv31)) (snd3 (mainNew ?tv30)))))
  (=== synduce-list-mtshom (inp0) (CList) (main inp0) (fst3 (mainNew inp0)))
)
