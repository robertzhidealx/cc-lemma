(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data UList (Uelt Usplit))
  (:: Uelt (-> (Nat) UList))
  (:: Usplit (-> (UList Nat Nat UList) UList))
  (data List (Elt Cons))
  (:: Elt (-> (Nat) List))
  (:: Cons (-> (Nat List) List))
  (:: tf1 (-> (List UList) List))
  (let tf1 (?tv4 (Uelt ?tv5)) (Cons ?tv5 ?tv4))
  (let tf1 (?tv4 (Usplit ?tv6 ?tv7 ?tv8 ?tv9)) (tf1 (Cons ?tv7 (Cons ?tv8 (tf1 ?tv4 ?tv9))) ?tv6))
  (:: repr (-> (UList) List))
  (let repr ((Uelt ?tv12)) (Elt ?tv12))
  (let repr ((Usplit ?tv13 ?tv14 ?tv15 ?tv16)) (tf1 (Cons ?tv14 (Cons ?tv15 (repr ?tv16))) ?tv13))
  (:: gq (-> (Nat Nat) Bool))
  (let gq (Zero ?x) False)
  (let gq ((Succ ?x) Zero) True)
  (let gq ((Succ ?x) (Succ ?y)) (gq ?x ?y))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: tf5 (-> (Nat List) Bool))
  (let tf5 (?tv21 (Elt ?tv22)) (gq ?tv21 ?tv22))
  (let tf5 (?tv21 (Cons ?tv23 ?tv24)) (and (gq ?tv21 ?tv23) (tf5 ?tv23 ?tv24)))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite2 (-> (Bool Bool Bool) Bool))
  (let ite2 (True ?x ?y) ?x)
  (let ite2 (False ?x ?y) ?y)
  (:: tf7 (-> (Nat List) Bool))
  (let tf7 (?tv28 (Elt ?tv29)) (lq ?tv28 ?tv29))
  (let tf7 (?tv28 (Cons ?tv30 ?tv31)) (ite2 (lq ?tv28 ?tv30) (tf7 ?tv30 ?tv31) (tf5 ?tv30 ?tv31)))
  (:: isunimodal (-> (List) Bool))
  (let isunimodal ((Elt ?tv33)) True)
  (let isunimodal ((Cons ?tv34 ?tv35)) (tf7 ?tv34 ?tv35))
  (:: ite3 (-> (Bool Nat Nat) Nat))
  (let ite3 (True ?x ?y) ?x)
  (let ite3 (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv36 ?tv37) (ite3 (lq ?tv36 ?tv37) ?tv37 ?tv36))
  (:: spec (-> (List) Nat))
  (let spec ((Elt ?tv41)) ?tv41)
  (let spec ((Cons ?tv42 ?tv43)) (max ?tv42 (spec ?tv43)))
  (:: ite4 (-> (Bool UList UList) UList))
  (let ite4 (True ?x ?y) ?x)
  (let ite4 (False ?x ?y) ?y)
  (:: target (-> (UList) UList))
  (let target ((Uelt ?tv47)) (Uelt ?tv47))
  (let target ((Usplit ?tv48 ?tv49 ?tv50 ?tv51)) (ite4 (gq ?tv49 ?tv50) (Usplit (target ?tv48) ?tv49 ?tv50 ?tv51) (Usplit ?tv48 ?tv49 ?tv50 (target ?tv51))))
  (:: main (-> (UList) Nat))
  (let main (?tv52) (ite3 (isunimodal (repr ?tv52)) (spec (repr (target ?tv52))) Zero))
  (:: targetNew (-> (UList) Nat))
  (let targetNew ((Uelt ?tv56)) ?tv56)
  (let targetNew ((Usplit ?tv57 ?tv58 ?tv59 ?tv60)) (ite3 (gq ?tv58 ?tv59) (max ?tv58 (targetNew ?tv57)) (max ?tv59 (targetNew ?tv60))))
  (:: mainNew (-> (UList) Nat))
  (let mainNew (?tv61) (ite3 (isunimodal (repr ?tv61)) (targetNew ?tv61) Zero))
  (=== synduce_constraints_unimodal_lists_max_logn_v2 (inp0) (UList) (main inp0) (mainNew inp0))
)
