(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Unit (Null))
  (:: Null Unit)
  (data List (Cons Nil))
  (:: Cons (-> (Nat List) List))
  (:: Nil (-> (Unit) List))
  (:: plus (-> (Nat) Nat))
  (let plus (Zero) (Succ Zero))
  (let plus ((Succ ?x)) (Succ (plus ?x)))
  (:: length (-> (List) Nat))
  (let length ((Cons ?tv13 ?tv14)) (plus (length ?tv14)))
  (let length ((Nil ?tv15)) Zero)
  (:: mainNew (-> (List) Nat))
  (let mainNew ((Nil ?tv21)) Zero)
  (let mainNew ((Cons ?tv22 ?tv23)) (plus (mainNew ?tv23)))
  (=== autolifter_single_pass_length (inp0) (List) (length inp0) (mainNew inp0))
)
