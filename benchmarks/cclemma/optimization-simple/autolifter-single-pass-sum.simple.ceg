(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Unit (Null))
  (:: Null Unit)
  (data List (Cons Nil))
  (:: Cons (-> (Nat List) List))
  (:: Nil (-> (Unit) List))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: sum (-> (List) Nat))
  (let sum ((Nil ?tv13)) Zero)
  (let sum ((Cons ?tv14 ?tv15)) (plus ?tv14 (sum ?tv15)))
  (:: mainNew (-> (List) Nat))
  (let mainNew ((Nil ?tv21)) Zero)
  (let mainNew ((Cons ?tv22 ?tv23)) (plus ?tv22 (mainNew ?tv23)))
  (=== autolifter_single_pass_sum (inp0) (List) (sum inp0) (mainNew inp0))
)
