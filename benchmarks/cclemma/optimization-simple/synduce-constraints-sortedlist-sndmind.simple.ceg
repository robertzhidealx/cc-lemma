(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tuple0 (MakeTuple0))
  (:: MakeTuple0 (-> (Nat Nat) Tuple0))
  (data CList (Ctwo Concat))
  (:: Ctwo (-> (Nat Nat) CList))
  (:: Concat (-> (CList CList) CList))
  (data List (Two Cons))
  (:: Two (-> (Nat Nat) List))
  (:: Cons (-> (Nat List) List))
  (:: cat (-> (List List) List))
  (let cat (?tv5 (Two ?tv6 ?tv7)) (Cons ?tv6 (Cons ?tv7 ?tv5)))
  (let cat (?tv5 (Cons ?tv8 ?tv9)) (Cons ?tv8 (cat ?tv5 ?tv9)))
  (:: repr (-> (CList) List))
  (let repr ((Ctwo ?tv13 ?tv14)) (Two ?tv13 ?tv14))
  (let repr ((Concat ?tv15 ?tv16)) (cat (repr ?tv16) (repr ?tv15)))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite3 (-> (Bool Nat Nat) Nat))
  (let ite3 (True ?x ?y) ?x)
  (let ite3 (False ?x ?y) ?y)
  (:: min (-> (Nat Nat) Nat))
  (let min (?tv17 ?tv18) (ite3 (lq ?tv17 ?tv18) ?tv17 ?tv18))
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv19 ?tv20) (ite3 (lq ?tv19 ?tv20) ?tv20 ?tv19))
  (:: fst0 (-> (Tuple0) Nat))
  (let fst0 ((MakeTuple0 ?x0 ?x1)) ?x0)
  (:: snd0 (-> (Tuple0) Nat))
  (let snd0 ((MakeTuple0 ?x0 ?x1)) ?x1)
  (:: spec (-> (List) Tuple0))
  (let spec ((Two ?tv24 ?tv25)) (MakeTuple0 (min ?tv24 ?tv25) (max ?tv24 ?tv25)))
  (let spec ((Cons ?tv26 ?tv27)) (MakeTuple0 (min (fst0 (spec ?tv27)) ?tv26) (min (snd0 (spec ?tv27)) (max (fst0 (spec ?tv27)) ?tv26))))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: gq (-> (Nat Nat) Bool))
  (let gq (Zero ?x) False)
  (let gq ((Succ ?x) Zero) True)
  (let gq ((Succ ?x) (Succ ?y)) (gq ?x ?y))
  (:: tf7 (-> (Nat List) Bool))
  (let tf7 (?tv32 (Two ?tv33 ?tv34)) (and (gq ?tv32 ?tv33) (gq ?tv33 ?tv34)))
  (let tf7 (?tv32 (Cons ?tv35 ?tv36)) (and (gq ?tv32 ?tv35) (tf7 ?tv35 ?tv36)))
  (:: issorted (-> (List) Bool))
  (let issorted ((Two ?tv38 ?tv39)) (gq ?tv38 ?tv39))
  (let issorted ((Cons ?tv40 ?tv41)) (tf7 ?tv40 ?tv41))
  (:: main (-> (CList) Nat))
  (let main (?tv50) (ite3 (issorted (repr ?tv50)) (snd0 (spec (repr ?tv50))) Zero))
  (:: targetNew (-> (CList) Nat))
  (let targetNew ((Ctwo ?tv54 ?tv55)) ?tv54)
  (let targetNew ((Concat ?tv56 ?tv57)) (targetNew ?tv57))
  (:: mainNew (-> (CList) Nat))
  (let mainNew (?tv58) (ite3 (issorted (repr ?tv58)) (targetNew ?tv58) Zero))
  (=== synduce-constraints-sortedlist-sndmind (inp0) (CList) (main inp0) (mainNew inp0))
)
