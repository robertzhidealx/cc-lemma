(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tree (Tip Bin))
  (:: Tip (-> (Nat) Tree))
  (:: Bin (-> (Tree Tree) Tree))
  (:: tf3 (-> (Tree) Tree))
  (let tf3 ((Tip ?tv13)) (Tip (plus (Succ Zero) ?tv13)))
  (let tf3 ((Bin ?tv14 ?tv15)) (Bin (tf3 ?tv14) (tf3 ?tv15)))
  (:: tri (-> (Tree) Tree))
  (let tri ((Tip ?tv6)) (Tip Zero))
  (let tri ((Bin ?tv7 ?tv8)) (Bin (tf3 (tri ?tv7)) (tf3 (tri ?tv8))))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite1 (-> (Bool Nat Nat) Nat))
  (let ite1 (True ?x ?y) ?x)
  (let ite1 (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv17 ?tv18) (ite1 (lq ?tv17 ?tv18) ?tv18 ?tv17))
  (:: maximum (-> (Tree) Nat))
  (let maximum ((Tip ?tv22)) ?tv22)
  (let maximum ((Bin ?tv23 ?tv24)) (max (maximum ?tv23) (maximum ?tv24)))
  (:: main (-> (Tree) Nat))
  (let main (?tv25) (maximum (tri ?tv25)))
  (:: mainNew (-> (Tree) Nat))
  (let mainNew ((Tip ?tv30)) Zero)
  (let mainNew ((Bin ?tv31 ?tv32)) (ite1 (lq (mainNew ?tv31) (mainNew ?tv32)) (plus (Succ Zero) (mainNew ?tv32)) (plus (Succ Zero) (mainNew ?tv31))))
  (=== fusion_algprog_page60 (inp0) (Tree) (main inp0) (mainNew inp0))
)
