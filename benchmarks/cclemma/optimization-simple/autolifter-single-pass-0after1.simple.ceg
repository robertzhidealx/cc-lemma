(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data List (Nil Cons))
  (:: Nil (-> (Unit) List))
  (:: Cons (-> (Bool List) List))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: not (-> (Bool) Bool))
  (let not (True) False)
  (let not (False) True)
  (:: or (-> (Bool Bool) Bool))
  (let or (True ?x) True)
  (let or (?x True) True)
  (let or (False False) False)
  (:: ite1 (-> (Bool Bool) Bool))
  (let ite1 (True ?y) True)
  (let ite1 (False ?y) ?y)
  (:: main (-> (Bool List) Bool))
  (let main (?tv14 (Nil ?tv15)) False)
  (let main (?tv14 (Cons ?tv16 ?tv17)) (ite1 (and ?tv14 (not ?tv16)) (main (or ?tv14 ?tv16) ?tv17)))
  (data Tuple2 (MakeTuple2))
  (:: MakeTuple2 (-> (Bool Bool) Tuple2))
  (:: snd2 (-> (Tuple2) Bool))
  (let snd2 ((MakeTuple2 ?x0 ?x1)) ?x1)
  (:: fst2 (-> (Tuple2) Bool))
  (let fst2 ((MakeTuple2 ?x0 ?x1)) ?x0)
  (:: mainNew (-> (List) Tuple2))
  (let mainNew ((Nil ?tv23)) (MakeTuple2 False True))
  (let mainNew ((Cons ?tv24 ?tv25)) (MakeTuple2 (or (and ?tv24 (not (snd2 (mainNew ?tv25)))) (fst2 (mainNew ?tv25))) (and ?tv24 (snd2 (mainNew ?tv25)))))
  (=== optimize (inp0) (List) (main False inp0) (fst2 (mainNew inp0)))
)
