(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tree (Nil Node))
  (:: Nil (-> (Unit) Tree))
  (:: Node (-> (Nat Tree Tree) Tree))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite1 (-> (Bool Nat Nat) Nat))
  (let ite1 (True ?x ?y) ?x)
  (let ite1 (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv0 ?tv1) (ite1 (lq ?tv0 ?tv1) ?tv1 ?tv0))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: height (-> (Tree) Nat))
  (let height ((Nil ?tv5)) Zero)
  (let height ((Node ?tv6 ?tv7 ?tv8)) (plus (Succ Zero) (max (height ?tv7) (height ?tv8))))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: nateq (-> (Nat Nat) Bool))
  (let nateq (Zero Zero) True)
  (let nateq (Zero (Succ ?x)) False)
  (let nateq ((Succ ?x) Zero) False)
  (let nateq ((Succ ?x) (Succ ?y)) (nateq ?x ?y))
  (:: balanced (-> (Tree) Bool))
  (let balanced ((Nil ?tv12)) True)
  (let balanced ((Node ?tv13 ?tv14 ?tv15)) (and (and (nateq (height ?tv14) (height ?tv15)) (balanced ?tv14)) (balanced ?tv15)))
  (:: spec (-> (Tree) Nat))
  (let spec ((Nil ?tv19)) Zero)
  (let spec ((Node ?tv20 ?tv21 ?tv22)) (plus (Succ Zero) (plus (spec ?tv21) (spec ?tv22))))
  (:: main (-> (Tree) Nat))
  (let main (?tv30) (ite1 (balanced ?tv30) (spec ?tv30) Zero))
  (:: times (-> (Nat Nat) Nat))
  (let times (Zero ?x) Zero)
  (let times ((Succ ?x) ?y) (plus (times ?x ?y) ?y))
  (:: targetNew (-> (Tree) Nat))
  (let targetNew ((Nil ?tv34)) Zero)
  (let targetNew ((Node ?tv35 ?tv36 ?tv37)) (plus (times (Succ (Succ Zero)) (targetNew ?tv36)) (max (targetNew ?tv36) (Succ Zero))))
  (:: mainNew (-> (Tree) Nat))
  (let mainNew (?tv38) (ite1 (balanced ?tv38) (targetNew ?tv38) Zero))
  (=== synduce_constraints_balanced_tree_node_count (inp0) (Tree) (main inp0) (mainNew inp0))
)
